#
# Copyright 2020-2024 University of Oxford and NHS England
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
#

default.doesnt.match.message=Property [{0}] of class [{1}] with value [{2}] does not match the required pattern [{3}]
default.invalid.url.message=Property [{0}] of class [{1}] with value [{2}] is not a valid URL
default.invalid.creditCard.message=Property [{0}] of class [{1}] with value [{2}] is not a valid credit card number
default.invalid.email.message=Property [{0}] of class [{1}] with value [{2}] is not a valid e-mail address
default.invalid.range.message=Property [{0}] of class [{1}] with value [{2}] does not fall within the valid range from [{3}] to [{4}]
default.invalid.size.message=Property [{0}] of class [{1}] with value [{2}] does not fall within the valid size range from [{3}] to [{4}]
default.invalid.max.message=Property [{0}] of class [{1}] with value [{2}] exceeds maximum value [{3}]
default.invalid.min.message=Property [{0}] of class [{1}] with value [{2}] is less than minimum value [{3}]
default.invalid.max.size.message=Property [{0}] of class [{1}] with value [{2}] exceeds the maximum size of [{3}]
default.invalid.min.size.message=Property [{0}] of class [{1}] with value [{2}] is less than the minimum size of [{3}]
default.invalid.validator.message=Property [{0}] of class [{1}] with value [{2}] does not pass custom validation
default.not.inlist.message=Property [{0}] of class [{1}] with value [{2}] is not contained within the list [{3}]
default.blank.message=Property [{0}] of class [{1}] cannot be blank
default.not.equal.message=Property [{0}] of class [{1}] with value [{2}] cannot equal [{3}]
default.null.message=Property [{0}] of class [{1}] cannot be null
default.not.unique.message=Property [{0}] of class [{1}] with value [{2}] must be unique
# Data binding errors. Use "typeMismatch.$className.$propertyName to customize (eg typeMismatch.Book.author)
typeMismatch.java.net.URL=Property {0} must be a valid URL
typeMismatch.java.net.URI=Property {0} must be a valid URI
typeMismatch.java.util.Date=Property {0} must be a valid Date
typeMismatch.java.lang.Double=Property {0} must be a valid number
typeMismatch.java.lang.Integer=Property {0} must be a valid number
typeMismatch.java.lang.Long=Property {0} must be a valid number
typeMismatch.java.lang.Short=Property {0} must be a valid number
typeMismatch.java.math.BigDecimal=Property {0} must be a valid number
typeMismatch.java.math.BigInteger=Property {0} must be a valid number
#typeMismatch=Property {0} is type-mismatched
unauthorised.action=The current user does not have the necessary permissions to perform requested action
gone.action=The requested action [{0}] no longer exists for the class [{1}]
# Additional messages for invalid 422 responses
invalid.unique.values.message=Property [{0}] of class [{1}] has non-unique values [{3}] on property [{4}]
invalid.same.property.message=Property [{0}] of class [{1}] cannot be the same as property [{3}]
invalid.domain.update.message=Property [{0}] of class [{1}] cannot be updated once it has been set
invalid.facet.owner.none.message=At least one [{0}] in {3} of class [{1}] must be set
invalid.facet.owner.only.one.message=Only one [{0}] in {3} of class [{1}] may be set
invalid.collection.empty.message=Collection [{3}] of [{4}] cannot be empty
invalid.collection.min.size.message=Collection [{3}] of [{4}] must have at least [{5}] elements
annotation.description.required.message=Property [{0}] of class [{1}] cannot be null
semanticlink.linktype.must.be.assignable.message=Property [{0}] of class [{1}] with value [{2}] cannot be used
version.aware.label.branch.name.already.exists=Property [{0}] of class [{1}] with value [{2}] already exists for label [{3}]
model.finalise.must.provide.version.or.versionchangetype=Must provide either a version or versionChangeType when finalising a model
version.aware.label.not.unique.same.branch.names=Property [{0}] of class [{1}] with value [{2}] must be unique by branch name
version.aware.label.not.unique.same.versions=Property [{0}] of class [{1}] with value [{2}] must be unique by versions
version.aware.model.version.change.not.allowed=Property [{0}] of class [{1}] cannot be changed once set
version.aware.model.version.cannot.be.set.on.branch=Property [{0}] of class [{1}] cannot be set on non-main branch
version.aware.model.version.can.only.set.on.finalised.model=Property [{0}] of class [{1}] can only be set on a finalised model
version.aware.model.version.must.be.set.on.finalised.model=Property [{0}] of class [{1}] must be set on a finalised model
version.aware.documentation.version.change.not.allowed=Property [{0}] of class [{1}] cannot be changed once set
invalid.version.aware.new.version.not.finalised.message={0} [{1}({2})] cannot have a new version as it is not finalised
invalid.version.aware.new.version.superseded.message={0} [{1}({2})] cannot have a new version as it has been superseded by [{3}({4})]
invalid.api.property.key.format=Api Property key with value [{2}] must be lowercase, dot-separated only
invalid.versioned.folder.child.folders=Cannot have any VersionedFolders inside a VersionedFolder
invalid.patch.value.and.array.changes=Cannot have a value and array changes in a patch
invalid.patch.no.changes=A patch must declare some changes
invalid.authority.default=A default authority already exists
invalid.label.characters=Label [{2}] cannot contain any of the characters {3}