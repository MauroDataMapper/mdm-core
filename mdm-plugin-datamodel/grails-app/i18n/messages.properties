#
# Copyright 2020-2024 University of Oxford and NHS England
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
#
invalid.summary.metadata.datamodel.type=DataModel [{3}] must be of type [{4}]
invalid.model.type.datatype=Cannot refer to a DataModel using a ModelDataType
invalid.dataelement.datatype.model=DataType assigned to DataElement must belong to the same DataModel or be imported
invalid.datatype.dataclass.model=DataClass assigned to DataType must belong to the same DataModel or be imported
# Validation messages when importing or extending
invalid.extended.dataclasses.model.not.finalised=[{3}] extended DataClasses do not belong to finalised DataModels
invalid.extended.dataclass.model.not.finalised=DataClass [{0}] to be extended does not belong to a finalised DataModel
invalid.deletion.dataclass.used.as.extension=Cannot delete DataClass [{0}] as it is still used as an extension in another DataClass
invalid.imported.modelitem.model.not.finalised={0} [{1}] to be imported does not belong to a finalised DataModel or reside inside the same VersionedFolder
invalid.imported.modelitems.model.not.finalised=[{3}] imported [{1}] do not belong to finalised DataModels
invalid.imported.modelitem.same.datamodel={0} [{1}] to be imported belongs to the DataModel already
invalid.imported.modelitem.same.dataclass={0} [{1}] to be imported belongs to the DataClass already
invalid.imported.dataclass.into.self=DataClass [{0}] cannot be imported into itself
invalid.imported.deletion.modelitem.same.datamodel={0} [{1}] belongs to the DataModel and cannot be removed as an import
invalid.imported.deletion.modelitem.same.dataclass={0} [{1}] belongs to the DataClass and cannot be removed as an import
invalid.deletion.modelitem.used.as.import=Cannot delete {0} [{1}] as it is still used as an import
