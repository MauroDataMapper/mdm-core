buildscript {
    repositories {
        mavenLocal()
        maven {url "https://jenkins.cs.ox.ac.uk/artifactory/plugins-snapshot"}
        maven {url "https://jenkins.cs.ox.ac.uk/artifactory/plugins-release"}
        jcenter()

    }
    dependencies {
        classpath "ox.softeng.gradle:oxbrcinformatics-gradle-plugins:$oxbrcinformaticsGradlePluginsVersion"
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:$grailsHibernate5Version"
        classpath "org.grails.plugins:views-gradle:$grailsViewsVersion"

        // The version of spring-core included is 3.1.3.RELEASE which is incompatible with the grails-gradle-plugin used by all the
        // the Grails modules and causes issues when trying to run-app therefore we exclude it
        classpath("gradle.plugin.com.hierynomus.gradle.plugins:license-gradle-plugin:$licenseGradlePluginVersion") {
            exclude group: 'org.springframework', module: 'spring-core'
        }
        // However without spring-core the license plugin won't work so we need to include it at the top level
        // this version will need to be kept inline with Grails' spring-core
        classpath "org.springframework:spring-core:$licenseGradlePluginSpringCoreOverrideVersion"
    }
}

plugins {
    id 'project-report'
    id 'jacoco'
}

apply plugin: "idea"
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-plugin-publish"
apply plugin: "org.grails.plugins.views-json"
apply plugin: "org.grails.plugins.views-markup"

apply plugin: 'ox.softeng.ox-brc-base'
apply plugin: 'ox.softeng.ox-brc-artifactory'
apply plugin: "com.github.hierynomus.license"

repositories {
    mavenLocal()
    maven {url "https://jenkins.cs.ox.ac.uk/artifactory/libs-release"}
    maven {url "https://jenkins.cs.ox.ac.uk/artifactory/libs-snapshot"}
    maven {url "https://repo.grails.org/grails/core"}
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-codecs"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-datasource"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails.plugins:cache", {
        exclude group: "org.codehaus.groovy", module: "groovy-all"
    }
    compile "org.grails.plugins:async"
    //compile "org.grails:grails-plugin-async"
    compile "org.grails.plugins:hibernate5:$grailsHibernate5Version"
    compile "org.hibernate:hibernate-core"
    compile "org.grails.plugins:views-json:$grailsViewsVersion"
    compile "org.grails.plugins:views-json-templates:$grailsViewsVersion"
    compile "org.grails.plugins:views-markup:$grailsViewsVersion"
    compileOnly "io.micronaut:micronaut-inject-groovy"
    console "org.grails:grails-console"
    // Until the fixes are published we need to use our versions of the profiles
    profile "org.grails.profiles:rest-api-plugin", {
        transitive false
    }
    profile "org.grails.profiles:rest-api", {
        transitive false
    }
    profile "org.grails.profiles:plugin", {
        transitive false
    }
    profile "org.grails.profiles:base:4.1.0.OXBRC", {
        transitive false
    }
    provided "org.springframework.boot:spring-boot-starter-tomcat"
    runtime "org.glassfish.web:el-impl:2.1.2-b03"
    integrationTestRuntimeOnly "com.h2database:h2"
    runtime "org.apache.tomcat:tomcat-jdbc"
    runtime "javax.xml.bind:jaxb-api:$jaxbApiVersion"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.mockito:mockito-core"
    testCompile "io.micronaut:micronaut-http-client"
    testCompile "org.grails:grails-web-testing-support"
    //testCompile "org.grails:grails-plugin-testing"
    testCompile "io.micronaut:micronaut-http-client"
}

bootRun {
    ignoreExitValue true
    jvmArgs(
        '-Dspring.output.ansi.enabled=always',
        '-noverify',
        '-XX:TieredStopAtLevel=1')
    sourceResources sourceSets.main

    System.properties.each {prop ->
        systemProperty prop.key, prop.value
    }
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}
// enable if you wish to package this plugin as a standalone application
bootJar.enabled = false
grailsPublish {
    // TODO: Provide values here
    user = ''
    key = ''
    githubSlug = 'MauroDataMapper-Plugins/mdm-plugins-profile'
    license {
        name = 'Apache-2.0'
    }
    title = "Mauro Data Mapper Profile Plugin"
    desc = '''The Profiles domain, services and controllers for the MauroDataMapper backend.'''
    developers = [olliefreeman: 'Oliver Freeman', jameswelch: "James Welch",]
    //issueTrackerUrl = 'https://maurodatamapper.myjetbrains.com' TODO
}


grails {
    plugins {
        compile group: 'uk.ac.ox.softeng.maurodatamapper', name: 'mdm-core', version: mdmCoreVersion
        compile group: 'uk.ac.ox.softeng.maurodatamapper', name: 'mdm-plugin-datamodel', version: mdmPluginDataModelVersion
    }
}

apply from: 'dependencies.gradle'
apply from: "${rootDir}/gradle/additions/grails.gradle"

license {
    header = file("${rootDir}/NOTICE")
    excludes([
        '**/*.gson',
        '**/*.yml',
        '**/META-INF/**',
        '**/*.txt',
        '**/*.json',
        '**/*.gml',
        '**/*.jpeg',
        '**/*.png',
        '**/*.xml'
    ])
}